// <auto-generated />
using System;
using Agrobook.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Agrobook.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20211007202100_AjusteTabelaVeiculos")]
    partial class AjusteTabelaVeiculos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Agrobook.Domain.Models.Atividades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssociadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SafraId")
                        .HasColumnType("int");

                    b.Property<int>("TalhaoId")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociadoId");

                    b.HasIndex("SafraId");

                    b.HasIndex("TalhaoId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Cidades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Estados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CodigoUf")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Regiao")
                        .HasColumnType("int");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Moeda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CascadeMode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Moeda");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.UnidadesMedidas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Simbolo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnidadeBaseId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorUnidade")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeBaseId");

                    b.ToTable("UnidadesMedidas");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Caixa.CategoriasDespesas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CascadeMode")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CategoriasDespesas");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Caixa.Despesas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CategoriaDespesaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MoedaId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(400)");

                    b.Property<int>("PatrimonioId")
                        .HasColumnType("int");

                    b.Property<int>("SafraId")
                        .HasColumnType("int");

                    b.Property<string>("TipoPessoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaDespesaId");

                    b.HasIndex("MoedaId");

                    b.HasIndex("PatrimonioId");

                    b.HasIndex("SafraId");

                    b.ToTable("Despesas");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Enderecos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CEP")
                        .HasColumnType("int");

                    b.Property<int>("CidadeId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Organizacoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<byte[]>("LogoMarca")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Organizacoes");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Associados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoRelacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Associados");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.ComprovantesPagamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Anexo")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PagamentosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PagamentosId");

                    b.ToTable("ComprovantesPagamentos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Contatos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AssociadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Telefone")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoContato")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssociadoId");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Contratacoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssociadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Funcao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Modelo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrganizacaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Termmino")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorReferencia")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("AssociadoId");

                    b.HasIndex("OrganizacaoId");

                    b.ToTable("Contratacoes");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.DadosBancarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Agencia")
                        .HasColumnType("int");

                    b.Property<int>("AssociadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Banco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PIX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssociadoId");

                    b.ToTable("DadosBancarios");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Documentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Anexo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("AssociadosId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssociadosId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Fisicas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssociadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<long>("CPF")
                        .HasColumnType("bigint");

                    b.Property<string>("CTPS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstadoCivil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrauInstrucao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PisPasep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerieCtps")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssociadoId")
                        .IsUnique();

                    b.ToTable("Fisicas");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Juridicas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssociadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CNPJ")
                        .HasColumnType("int");

                    b.Property<int?>("InscricaoEstadual")
                        .HasColumnType("int");

                    b.Property<int?>("InscricaoMunicipal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RamoAtividade")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssociadoId")
                        .IsUnique();

                    b.ToTable("Juridicas");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.LancamentosContabeis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CulturaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PagamentoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("TipoLancamentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("CulturaId");

                    b.HasIndex("PagamentoId");

                    b.HasIndex("TipoLancamentoId");

                    b.ToTable("LancamentosContabeis");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Pagamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssociadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("DespesaId")
                        .HasColumnType("int");

                    b.Property<decimal>("FGTS")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(400)");

                    b.Property<decimal>("SalarioBase")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("AssociadoId");

                    b.HasIndex("DespesaId");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.TiposLancamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CascadeMode")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TiposLancamentos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.AnexosManutencao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Anexo")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("ManutencaoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManutencaoId");

                    b.ToTable("AnexosManutencao");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.AnexosVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Anexo")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("AnexosVeiculo");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Classses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CascadeMode")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Classses");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.DetalhesPatrimonio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("PatrimonioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatrimonioId");

                    b.ToTable("DetalhesPatrimonio");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Fazendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Administrador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Hectare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PatrimonioId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxaValorizacaoAnual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("Telefone")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique()
                        .HasFilter("[EnderecoId] IS NOT NULL");

                    b.HasIndex("PatrimonioId")
                        .IsUnique();

                    b.ToTable("Fazendas");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Imoveis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<decimal>("Capacidade")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("ClasseId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoImovel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int?>("FazendaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatrimonioId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadeMedidaAreaId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadeMedidaCapacidadeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClasseId");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("FazendaId");

                    b.HasIndex("PatrimonioId")
                        .IsUnique();

                    b.HasIndex("UnidadeMedidaAreaId");

                    b.HasIndex("UnidadeMedidaCapacidadeId");

                    b.ToTable("Imoveis");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Manutencoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<decimal>("Custo")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Manutencoes");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Patrimonios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataVenda")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExpectativaUso")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("NumeroNotaFical")
                        .HasColumnType("bigint");

                    b.Property<int?>("OrganizacaoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorVenda")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizacaoId");

                    b.ToTable("Patrimonios");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Veiculos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AnoFabricao")
                        .HasColumnType("int");

                    b.Property<int?>("AnoModelo")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<long?>("Chassi")
                        .HasColumnType("bigint");

                    b.Property<string>("Combustivel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAquisicao")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstadoConservacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("KilometragemCompra")
                        .HasColumnType("bigint");

                    b.Property<long?>("KilometragemVenda")
                        .HasColumnType("bigint");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatrimonioId")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<long?>("Renavam")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TaxaDepreciacaoAnual")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PatrimonioId")
                        .IsUnique();

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.Culturas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CascadeMode")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Culturas");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.Safras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CascadeMode")
                        .HasColumnType("int");

                    b.Property<string>("Cultura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataColheita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPlantio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeResponsável")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SementeUtilizada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneResponsável")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Safras");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.Talhoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("FazendaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(400)");

                    b.HasKey("Id");

                    b.HasIndex("FazendaId");

                    b.ToTable("Talhoes");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.TalhoesSafras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SafraId")
                        .HasColumnType("int");

                    b.Property<int>("TalhaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SafraId");

                    b.HasIndex("TalhaId");

                    b.ToTable("TalhoesSafras");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Atividades", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Parceiro.Associados", "Associado")
                        .WithMany("Atividades")
                        .HasForeignKey("AssociadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Producao.Safras", "Safra")
                        .WithMany("Atividades")
                        .HasForeignKey("SafraId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Producao.Talhoes", "Talhao")
                        .WithMany("Atividades")
                        .HasForeignKey("TalhaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Veiculos", "Veiculo")
                        .WithMany("Atividades")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Associado");

                    b.Navigation("Safra");

                    b.Navigation("Talhao");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Cidades", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Base.Estados", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.UnidadesMedidas", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Base.UnidadesMedidas", "UnidadeMedidaCustom")
                        .WithMany("UnidadesMedidasCustom")
                        .HasForeignKey("UnidadeBaseId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("UnidadeMedidaCustom");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Caixa.Despesas", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Caixa.CategoriasDespesas", "CategoriaDespesa")
                        .WithMany("Despesas")
                        .HasForeignKey("CategoriaDespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Base.Moeda", "Moeda")
                        .WithMany("Despesas")
                        .HasForeignKey("MoedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Patrimonios", "Patrimonio")
                        .WithMany("Despesas")
                        .HasForeignKey("PatrimonioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Producao.Safras", "Safra")
                        .WithMany("Despesas")
                        .HasForeignKey("SafraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaDespesa");

                    b.Navigation("Moeda");

                    b.Navigation("Patrimonio");

                    b.Navigation("Safra");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Enderecos", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Base.Cidades", "Cidade")
                        .WithMany("Enderecos")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Base.Estados", "Estado")
                        .WithMany("Enderecos")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Organizacoes", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Enderecos", "Endereco")
                        .WithMany("Oraganizacoes")
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Associados", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Enderecos", "Endereco")
                        .WithMany("Associados")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.ComprovantesPagamentos", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Parceiro.Pagamentos", "Pagamentos")
                        .WithMany("ComprovantesPagamentos")
                        .HasForeignKey("PagamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Contatos", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Parceiro.Associados", "Associado")
                        .WithMany("Contatos")
                        .HasForeignKey("AssociadoId");

                    b.Navigation("Associado");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Contratacoes", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Parceiro.Associados", "Associado")
                        .WithMany("Contratacoes")
                        .HasForeignKey("AssociadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Organizacoes", "Organizacao")
                        .WithMany("Contratacoes")
                        .HasForeignKey("OrganizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Associado");

                    b.Navigation("Organizacao");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.DadosBancarios", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Parceiro.Associados", "Associado")
                        .WithMany("DadosBancarios")
                        .HasForeignKey("AssociadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Associado");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Documentos", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Parceiro.Associados", "Associado")
                        .WithMany("Documentos")
                        .HasForeignKey("AssociadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Associado");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Fisicas", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Parceiro.Associados", "Pessoa")
                        .WithOne("PessoaFisica")
                        .HasForeignKey("Agrobook.Domain.Models.Parceiro.Fisicas", "AssociadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Juridicas", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Parceiro.Associados", "Pessoa")
                        .WithOne("PessoaJuridica")
                        .HasForeignKey("Agrobook.Domain.Models.Parceiro.Juridicas", "AssociadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.LancamentosContabeis", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Producao.Culturas", "Cultura")
                        .WithMany("LancamentosContabeis")
                        .HasForeignKey("CulturaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Parceiro.Pagamentos", "Pagamento")
                        .WithMany("LancamentosContabeis")
                        .HasForeignKey("PagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Parceiro.TiposLancamentos", "TipoLancamento")
                        .WithMany("LancamentosContabeis")
                        .HasForeignKey("TipoLancamentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cultura");

                    b.Navigation("Pagamento");

                    b.Navigation("TipoLancamento");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Pagamentos", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Parceiro.Associados", "Associados")
                        .WithMany("Pagamentos")
                        .HasForeignKey("AssociadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Caixa.Despesas", "Despesa")
                        .WithMany("Pagamentos")
                        .HasForeignKey("DespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Associados");

                    b.Navigation("Despesa");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.AnexosManutencao", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Manutencoes", "Manutencao")
                        .WithMany("Anexos")
                        .HasForeignKey("ManutencaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manutencao");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.AnexosVeiculo", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Veiculos", "Veiculo")
                        .WithMany("Anexos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.DetalhesPatrimonio", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Patrimonios", "Patrimonio")
                        .WithMany("Detalhes")
                        .HasForeignKey("PatrimonioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patrimonio");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Fazendas", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Enderecos", "Endereco")
                        .WithOne("Fazenda")
                        .HasForeignKey("Agrobook.Domain.Models.PatrimonioGroup.Fazendas", "EnderecoId");

                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Patrimonios", "Patrimonio")
                        .WithOne("Fazenda")
                        .HasForeignKey("Agrobook.Domain.Models.PatrimonioGroup.Fazendas", "PatrimonioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Patrimonio");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Imoveis", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Classses", "Classe")
                        .WithMany("Imoveis")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Agrobook.Domain.Models.Enderecos", "Endereco")
                        .WithMany("Imoveis")
                        .HasForeignKey("EnderecoId");

                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Fazendas", "Fazenda")
                        .WithMany("Imoveis")
                        .HasForeignKey("FazendaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Patrimonios", "Patrimonio")
                        .WithOne("Imovel")
                        .HasForeignKey("Agrobook.Domain.Models.PatrimonioGroup.Imoveis", "PatrimonioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Base.UnidadesMedidas", "UnidadeMedidaArea")
                        .WithMany("Imoveis")
                        .HasForeignKey("UnidadeMedidaAreaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Base.UnidadesMedidas", "UnidadeMedidaCapcidade")
                        .WithMany()
                        .HasForeignKey("UnidadeMedidaCapacidadeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Classe");

                    b.Navigation("Endereco");

                    b.Navigation("Fazenda");

                    b.Navigation("Patrimonio");

                    b.Navigation("UnidadeMedidaArea");

                    b.Navigation("UnidadeMedidaCapcidade");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Manutencoes", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Veiculos", "Veiculo")
                        .WithMany("Manutencoes")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Patrimonios", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Organizacoes", "Organizacao")
                        .WithMany("Patrimonios")
                        .HasForeignKey("OrganizacaoId");

                    b.Navigation("Organizacao");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Veiculos", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Patrimonios", "Patrimonio")
                        .WithOne("Veiculo")
                        .HasForeignKey("Agrobook.Domain.Models.PatrimonioGroup.Veiculos", "PatrimonioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patrimonio");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.Talhoes", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Fazendas", "Fazenda")
                        .WithMany("Talhoes")
                        .HasForeignKey("FazendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fazenda");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.TalhoesSafras", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Producao.Safras", "Safra")
                        .WithMany("TalhaoSafras")
                        .HasForeignKey("SafraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Producao.Talhoes", "Talhao")
                        .WithMany("TalhaoSafras")
                        .HasForeignKey("TalhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Safra");

                    b.Navigation("Talhao");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Cidades", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Estados", b =>
                {
                    b.Navigation("Cidades");

                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Moeda", b =>
                {
                    b.Navigation("Despesas");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.UnidadesMedidas", b =>
                {
                    b.Navigation("Imoveis");

                    b.Navigation("UnidadesMedidasCustom");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Caixa.CategoriasDespesas", b =>
                {
                    b.Navigation("Despesas");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Caixa.Despesas", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Enderecos", b =>
                {
                    b.Navigation("Associados");

                    b.Navigation("Fazenda");

                    b.Navigation("Imoveis");

                    b.Navigation("Oraganizacoes");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Organizacoes", b =>
                {
                    b.Navigation("Contratacoes");

                    b.Navigation("Patrimonios");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Associados", b =>
                {
                    b.Navigation("Atividades");

                    b.Navigation("Contatos");

                    b.Navigation("Contratacoes");

                    b.Navigation("DadosBancarios");

                    b.Navigation("Documentos");

                    b.Navigation("Pagamentos");

                    b.Navigation("PessoaFisica");

                    b.Navigation("PessoaJuridica");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Pagamentos", b =>
                {
                    b.Navigation("ComprovantesPagamentos");

                    b.Navigation("LancamentosContabeis");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.TiposLancamentos", b =>
                {
                    b.Navigation("LancamentosContabeis");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Classses", b =>
                {
                    b.Navigation("Imoveis");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Fazendas", b =>
                {
                    b.Navigation("Imoveis");

                    b.Navigation("Talhoes");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Manutencoes", b =>
                {
                    b.Navigation("Anexos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Patrimonios", b =>
                {
                    b.Navigation("Despesas");

                    b.Navigation("Detalhes");

                    b.Navigation("Fazenda");

                    b.Navigation("Imovel");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Veiculos", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("Atividades");

                    b.Navigation("Manutencoes");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.Culturas", b =>
                {
                    b.Navigation("LancamentosContabeis");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.Safras", b =>
                {
                    b.Navigation("Atividades");

                    b.Navigation("Despesas");

                    b.Navigation("TalhaoSafras");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.Talhoes", b =>
                {
                    b.Navigation("Atividades");

                    b.Navigation("TalhaoSafras");
                });
#pragma warning restore 612, 618
        }
    }
}
