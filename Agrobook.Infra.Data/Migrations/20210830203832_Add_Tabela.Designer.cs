// <auto-generated />
using System;
using Agrobook.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Agrobook.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210830203832_Add_Tabela")]
    partial class Add_Tabela
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Agrobook.Domain.Models.Atividades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssociadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SafraId")
                        .HasColumnType("int");

                    b.Property<int>("TalhaoId")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociadoId");

                    b.HasIndex("SafraId");

                    b.HasIndex("TalhaoId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CEP")
                        .HasColumnType("int");

                    b.Property<int>("CidadeId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("PaisId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Organizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<byte[]>("LogoMarca")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Organizacao");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Associado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CNPJ")
                        .HasColumnType("int");

                    b.Property<int>("CPF")
                        .HasColumnType("int");

                    b.Property<int>("ContratacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TipoPessoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("ContratacaoId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Associado");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Contratacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Modelo")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrganizacaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Termmino")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrganizacaoId");

                    b.ToTable("Contratacao");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Fazenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Administrador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Hectare")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<long>("Telefone")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("Fazenda");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Patrimonio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Compra")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("FazendaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrganizacaoId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCompra")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("VeivuloId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Venda")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FazendaId")
                        .IsUnique();

                    b.HasIndex("OrganizacaoId");

                    b.HasIndex("VeivuloId")
                        .IsUnique();

                    b.ToTable("Patrimonio");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AnoFabricao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CascadeMode")
                        .HasColumnType("int");

                    b.Property<string>("Combustivel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Kilometragem")
                        .HasColumnType("bigint");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.Safra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CascadeMode")
                        .HasColumnType("int");

                    b.Property<string>("Cultura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataColheita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPlantio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeResponsável")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SementeUtilizada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneResponsável")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Safra");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.Talhao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("FazendaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Hectare")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FazendaId");

                    b.ToTable("Talhao");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.TalhaoSafra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SafraId")
                        .HasColumnType("int");

                    b.Property<int>("TalhaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SafraId");

                    b.HasIndex("TalhaId");

                    b.ToTable("TalhaoSafra");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Atividades", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Parceiro.Associado", "Associado")
                        .WithMany("Atividades")
                        .HasForeignKey("AssociadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Producao.Safra", "Safra")
                        .WithMany("Atividades")
                        .HasForeignKey("SafraId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Producao.Talhao", "Talhao")
                        .WithMany("Atividades")
                        .HasForeignKey("TalhaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Veiculo", "Veiculo")
                        .WithMany("Atividades")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Associado");

                    b.Navigation("Safra");

                    b.Navigation("Talhao");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Cidade", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Base.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Estado", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Base.Pais", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Endereco", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Base.Cidade", "Cidade")
                        .WithMany("Enderecos")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Base.Estado", "Estado")
                        .WithMany("Enderecos")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Base.Pais", "Pais")
                        .WithMany("Enderecos")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Estado");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Organizacao", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Endereco", "Endereco")
                        .WithMany("Oraganizacoes")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Associado", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Parceiro.Contratacao", "Contratacao")
                        .WithMany("Associados")
                        .HasForeignKey("ContratacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Endereco", "Endereco")
                        .WithMany("Associados")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Contratacao");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Contratacao", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Organizacao", "Organizacao")
                        .WithMany("Contratacoes")
                        .HasForeignKey("OrganizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacao");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Fazenda", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Endereco", "Endereco")
                        .WithOne("Fazenda")
                        .HasForeignKey("Agrobook.Domain.Models.PatrimonioGroup.Fazenda", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Patrimonio", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Fazenda", "Fazenda")
                        .WithOne("Patrimonio")
                        .HasForeignKey("Agrobook.Domain.Models.PatrimonioGroup.Patrimonio", "FazendaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Organizacao", "Organizacao")
                        .WithMany("Patrimonios")
                        .HasForeignKey("OrganizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Veiculo", "Veiculo")
                        .WithOne("Patrimonio")
                        .HasForeignKey("Agrobook.Domain.Models.PatrimonioGroup.Patrimonio", "VeivuloId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Fazenda");

                    b.Navigation("Organizacao");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.Talhao", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.PatrimonioGroup.Fazenda", "Fazenda")
                        .WithMany("Talhoes")
                        .HasForeignKey("FazendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fazenda");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.TalhaoSafra", b =>
                {
                    b.HasOne("Agrobook.Domain.Models.Producao.Safra", "Safra")
                        .WithMany("TalhaoSafras")
                        .HasForeignKey("SafraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrobook.Domain.Models.Producao.Talhao", "Talhao")
                        .WithMany("TalhaoSafras")
                        .HasForeignKey("TalhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Safra");

                    b.Navigation("Talhao");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Cidade", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Estado", b =>
                {
                    b.Navigation("Cidades");

                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Base.Pais", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Estados");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Endereco", b =>
                {
                    b.Navigation("Associados");

                    b.Navigation("Fazenda");

                    b.Navigation("Oraganizacoes");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Organizacao", b =>
                {
                    b.Navigation("Contratacoes");

                    b.Navigation("Patrimonios");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Associado", b =>
                {
                    b.Navigation("Atividades");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Parceiro.Contratacao", b =>
                {
                    b.Navigation("Associados");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Fazenda", b =>
                {
                    b.Navigation("Patrimonio");

                    b.Navigation("Talhoes");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.PatrimonioGroup.Veiculo", b =>
                {
                    b.Navigation("Atividades");

                    b.Navigation("Patrimonio");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.Safra", b =>
                {
                    b.Navigation("Atividades");

                    b.Navigation("TalhaoSafras");
                });

            modelBuilder.Entity("Agrobook.Domain.Models.Producao.Talhao", b =>
                {
                    b.Navigation("Atividades");

                    b.Navigation("TalhaoSafras");
                });
#pragma warning restore 612, 618
        }
    }
}
